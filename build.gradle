plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.10.0'
    testImplementation'io.github.bonigarcia:webdrivermanager:5.9.2'

    testImplementation 'io.cucumber:cucumber-java:7.8.1'
    testImplementation 'io.cucumber:cucumber-junit:7.8.1'

    testImplementation platform('org.junit:junit-bom:5.9.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.0'


    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.5.0'
    testImplementation group: 'org.json', name: 'json', version: '20240303'
    testImplementation group: 'io.rest-assured', name: 'json-schema-validator', version: '5.5.0'

    testImplementation group: 'org.assertj', name: 'assertj-core', version:'3.24.0'
}

//test {
//    useJUnitPlatform()
//}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

def uiTags = (findProperty('uiTags') == null || findProperty('uiTags').isEmpty()) ? null : findProperty('uiTags')

task cucumber(type: JavaExec) {
    description = "Running Cucumber Test"
    group = "verification"
    dependsOn assemble, compileTestJava
    mainClass.set("io.cucumber.core.cli.Main")
    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output

    doFirst {
        if (findProperty('testType') == 'api') {
            args = [
                    '--plugin', 'html:reports/cucumber-api-report.html',
                    '--plugin', 'pretty',
                    '--glue', 'apitest.stepDef',
                    '--tags', "@ApiTest",
                    'src/test/resources/features/'
            ]
        } else if (findProperty('testType') == 'ui') {
            args = [
                    '--plugin', 'html:reports/cucumber-ui-report.html',
                    '--plugin', 'pretty',
                    '--glue', 'com.tiks.stepdef',
                    'src/test/resources/featuresUI/'
            ]
            if (uiTags != null) {
                args.add('--tags')
                args.add("${uiTags}")
            }
        } else {
            throw new GradleException("Please specify the testType property ('api' or 'ui')")
        }
    }
}
